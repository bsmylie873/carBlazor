@page "/login"
@inject HttpClient Http
@inject NavigationManager NavigationManager
@using Microsoft.AspNetCore.WebUtilities
@rendermode InteractiveServer

<PageTitle>Login - Car Dealership Management</PageTitle>

<div class="row justify-content-center">
    <div class="col-md-6">
        <div class="card">
            <div class="card-header">Login</div>
            <div class="card-body">
                @if (_errorMessage != null)
                {
                    <div class="alert alert-danger">@_errorMessage</div>
                }
                <EditForm Model="@loginModel" OnValidSubmit="HandleLogin">
                    <DataAnnotationsValidator/>

                    <div class="mb-3">
                        <label for="username" class="form-label">Username</label>
                        <InputText @bind-Value="loginModel.Username" class="form-control" id="username" required/>
                    </div>

                    <div class="mb-3">
                        <label for="password" class="form-label">Password</label>
                        <InputText type="password" @bind-Value="loginModel.Password" class="form-control" id="password"
                                   required/>
                    </div>

                    <div class="mb-3 form-check">
                        <InputCheckbox @bind-Value="loginModel.RememberMe" class="form-check-input" id="rememberMe"/>
                        <label class="form-check-label" for="rememberMe">Remember me</label>
                    </div>

                    <button type="submit" class="btn btn-primary w-100" disabled="@isLoading">
                        @if (isLoading)
                        {
                            <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                            <span> Loading...</span>
                        }
                        else
                        {
                            <span>Login</span>
                        }
                    </button>
                </EditForm>
            </div>
        </div>
    </div>
</div>

@code {
    private string? _errorMessage;
    private bool isLoading = false;
    private LoginModel loginModel = new();

    protected override void OnInitialized()
    {
        var uri = new Uri(NavigationManager.Uri);
        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("error", out var error))
        {
            _errorMessage = "Invalid username or password.";
        }
    }

    private async Task HandleLogin()
    {
        isLoading = true;
        _errorMessage = null;

        try
        {
            var response = await Http.PostAsJsonAsync("api/admin/accounts/login", loginModel);

            if (response.IsSuccessStatusCode)
            {
                var result = await response.Content.ReadFromJsonAsync<LoginResult>();

                if (result?.success == true)
                {
                    NavigationManager.NavigateTo("/");
                }
                else
                {
                    _errorMessage = "Login failed. Please try again.";
                }
            }
            else if (response.StatusCode == System.Net.HttpStatusCode.Unauthorized)
            {
                _errorMessage = "Invalid username or password.";
            }
            else
            {
                _errorMessage = $"Error: {response.ReasonPhrase}";
            }
        }
        catch (Exception ex)
        {
            _errorMessage = $"Error: {ex.Message}";
        }
        finally
        {
            isLoading = false;
        }
    }

    private class LoginModel
    {
        public string Username { get; set; } = string.Empty;
        public string Password { get; set; } = string.Empty;
        public bool RememberMe { get; set; }
    }

    private class LoginResult
    {
        public bool success { get; set; }
        public bool passwordResetRequired { get; set; }
        public int userId { get; set; }
    }

}