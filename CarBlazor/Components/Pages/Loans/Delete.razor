@page "/loans/delete/{Id:int}"
@attribute [Authorize(Roles = "Admin,Manager")]
@using CarBlazor.Data
@using CarBlazor.Models
@using Microsoft.AspNetCore.Authorization
@using Microsoft.EntityFrameworkCore
@inject CarBlazorContext Context
@inject NavigationManager Navigation
@rendermode InteractiveServer

<PageTitle>Delete Loan</PageTitle>

<h1>Delete</h1>

<h3>Are you sure you want to delete this loan?</h3>
<div>
    <h4>Loan</h4>
    <hr />
    @if (Loan != null)
    {
        <dl class="row">
            <dt class="col-sm-2">Car</dt>
            <dd class="col-sm-10">@($"{Loan.Car?.Make} {Loan.Car?.Model} ({Loan.Car?.Year})")</dd>

            <dt class="col-sm-2">Amount</dt>
            <dd class="col-sm-10">@Loan.Amount.ToString("C")</dd>

            <dt class="col-sm-2">Interest Rate</dt>
            <dd class="col-sm-10">@Loan.InterestRate.ToString("P2")</dd>

            <dt class="col-sm-2">Start Date</dt>
            <dd class="col-sm-10">@Loan.StartDate.ToShortDateString()</dd>

            <dt class="col-sm-2">End Date</dt>
            <dd class="col-sm-10">@Loan.EndDate.ToShortDateString()</dd>

            <dt class="col-sm-2">Monthly Payment</dt>
            <dd class="col-sm-10">@Loan.MonthlyPayment.ToString("C")</dd>

            <dt class="col-sm-2">Status</dt>
            <dd class="col-sm-10">@Loan.Status</dd>
        </dl>

        <form>
            <button type="button" class="btn btn-danger" @onclick="DeleteLoan">Delete</button> |
            <button type="button" class="btn btn-secondary" @onclick="GoBack">Back to List</button>
        </form>
    }
    else
    {
        <p>Loading...</p>
    }
</div>

@code {
    [Parameter]
    public int Id { get; set; }

    private Loan? Loan { get; set; }
    private int? CarId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Loan = await Context.Loan
            .Include(l => l.Car)
            .FirstOrDefaultAsync(l => l.Id == Id);

        if (Loan == null)
        {
            Navigation.NavigateTo("loans");
            return;
        }

        CarId = Loan.CarId;
    }

    private async Task DeleteLoan()
    {
        if (Loan != null)
        {
            Context.Loan.Remove(Loan);
            await Context.SaveChangesAsync();

            Navigation.NavigateTo(CarId.HasValue ? $"cars/details/{CarId.Value}" : "loans");
        }
    }

    private void GoBack()
    {
        Navigation.NavigateTo(CarId.HasValue ? $"cars/details/{CarId.Value}" : "loans");
    }
}