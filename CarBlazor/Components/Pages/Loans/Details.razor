@page "/loans/details/{Id:int}"
@attribute [Authorize(Roles = "Admin,Manager")]
@using CarBlazor.DAL.Models
@using Microsoft.AspNetCore.Authorization
@inject HttpClient Http
@inject NavigationManager Navigation
@rendermode InteractiveServer

<PageTitle>Loan Details</PageTitle>

<h1>Details</h1>

@if (!string.IsNullOrEmpty(ErrorMessage))
{
    <div class="alert alert-danger">@ErrorMessage</div>
}

<div>
    <h4>Loan</h4>
    <hr/>
    @if (Loan != null)
    {
        <dl class="row">
            <dt class="col-sm-2">Car</dt>
            <dd class="col-sm-10">
                <a href="@($"cars/details/{Loan.CarId}")">@($"{Loan.Car?.Make} {Loan.Car?.Model} ({Loan.Car?.Year})")</a>
            </dd>

            <dt class="col-sm-2">Customer</dt>
            <dd class="col-sm-10">
                <a href="@($"customers/details/{Loan.CustomerId}")">@Loan.Customer?.FullName</a>
            </dd>

            <dt class="col-sm-2">Amount</dt>
            <dd class="col-sm-10">@Loan.Amount.ToString("C")</dd>

            <dt class="col-sm-2">Interest Rate</dt>
            <dd class="col-sm-10">@Loan.InterestRate.ToString("P2")</dd>

            <dt class="col-sm-2">Start Date</dt>
            <dd class="col-sm-10">@Loan.StartDate.ToShortDateString()</dd>

            <dt class="col-sm-2">End Date</dt>
            <dd class="col-sm-10">@Loan.EndDate.ToShortDateString()</dd>

            <dt class="col-sm-2">Monthly Payment</dt>
            <dd class="col-sm-10">@Loan.MonthlyPayment.ToString("C")</dd>

            <dt class="col-sm-2">Remaining Balance</dt>
            <dd class="col-sm-10">@Loan.RemainingBalance.ToString("C")</dd>

            <dt class="col-sm-2">Status</dt>
            <dd class="col-sm-10">@Loan.Status?.Name</dd>
        </dl>

        <div>
            <a class="btn btn-primary" href="@($"loans/edit/{Loan.Id}")">Edit</a> |
            <button class="btn btn-secondary" @onclick="GoBack">Back to List</button>
        </div>
    }
    else if (IsLoading)
    {
        <p>Loading...</p>
    }
    else
    {
        <p>Loan not found.
            <button class="btn btn-secondary" @onclick="GoBack">Back to List</button>
        </p>
    }
</div>

@code {
    [Parameter] public int Id { get; set; }

    private Loan? Loan { get; set; }
    private bool IsLoading { get; set; } = true;
    private string? ErrorMessage { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            Loan = await Http.GetFromJsonAsync<Loan>($"api/loans/{Id}");

            if (Loan == null)
            {
                ErrorMessage = $"Loan with ID {Id} not found.";
            }
        }
        catch (Exception ex)
        {
            ErrorMessage = $"Error loading loan details: {ex.Message}";
        }
        finally
        {
            IsLoading = false;
        }
    }

    private void GoBack()
    {
        Navigation.NavigateTo("loans");
    }

}