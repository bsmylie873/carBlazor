@page "/admin/users/{Id:int}"
@using Microsoft.AspNetCore.Authorization
@using CarBlazor.Data
@using CarBlazor.Models
@using Microsoft.EntityFrameworkCore
@inject CarBlazorContext DbContext
@inject NavigationManager NavigationManager
@attribute [Authorize(Policy = "AdminOnly")]
@rendermode InteractiveServer

<PageTitle>User Details - Car Dealership Management</PageTitle>

<div class="container">
    <h1>User Details</h1>
    
    @if (_user == null)
    {
        <div class="d-flex justify-content-center">
            <div class="spinner-border" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }
    else
    {
        <div class="card">
            <div class="card-header">
                <h3>@_user.Username</h3>
            </div>
            <div class="card-body">
                <div class="row mb-3">
                    <div class="col-md-3 fw-bold">User ID:</div>
                    <div class="col-md-9">@_user.Id</div>
                </div>
                <div class="row mb-3">
                    <div class="col-md-3 fw-bold">Username:</div>
                    <div class="col-md-9">@_user.Username</div>
                </div>
                <div class="row mb-3">
                    <div class="col-md-3 fw-bold">Role:</div>
                    <div class="col-md-9">@_user.Role.Name</div>
                </div>
            </div>
            <div class="card-footer">
                <a href="/admin/users" class="btn btn-secondary">Back to Users</a>
            </div>
        </div>
    }
</div>

@code {
    [Parameter]
    public int Id { get; set; }
    
    private User? _user;
    
    protected override async Task OnParametersSetAsync()
    {
        _user = await DbContext.Users
            .Include(u => u.Role)
            .FirstOrDefaultAsync(u => u.Id == Id);
            
        if (_user == null)
        {
            NavigationManager.NavigateTo("/admin/users");
        }
    }
}