@page "/cars/create"
@attribute [Authorize]
@using CarBlazor.Data
@using CarBlazor.Models
@using Microsoft.AspNetCore.Authorization
@using Microsoft.EntityFrameworkCore
@inject CarBlazorContext Context
@inject NavigationManager Navigation
@rendermode InteractiveServer

<PageTitle>Create Car</PageTitle>

<h1>Create</h1>

<h4>Car</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm Model="@Car" OnValidSubmit="CreateCar">
            <DataAnnotationsValidator />
            <ValidationSummary />
            
            <div class="form-group mb-3">
                <label for="make">Make</label>
                <InputText id="make" @bind-Value="Car.Make" class="form-control" />
                <ValidationMessage For="@(() => Car.Make)" />
            </div>
            
            <div class="form-group mb-3">
                <label for="model">Model</label>
                <InputText id="model" @bind-Value="Car.Model" class="form-control" />
                <ValidationMessage For="@(() => Car.Model)" />
            </div>
            
            <div class="form-group mb-3">
                <label for="year">Year</label>
                <InputNumber id="year" @bind-Value="Car.Year" class="form-control" />
                <ValidationMessage For="@(() => Car.Year)" />
            </div>
            
            <div class="form-group mb-3">
                <label for="color">Color</label>
                <InputText id="color" @bind-Value="Car.Color" class="form-control" />
                <ValidationMessage For="@(() => Car.Color)" />
            </div>
            
            <div class="form-group mb-3">
                <label for="productionDate">Production Date</label>
                <InputDate id="productionDate" @bind-Value="Car.ProductionDate" class="form-control" />
                <ValidationMessage For="@(() => Car.ProductionDate)" />
            </div>
            
            <div class="form-group mb-3">
                <button type="submit" class="btn btn-primary">Create</button>
                <button type="button" class="btn btn-secondary" @onclick="GoBack">Back to List</button>
            </div>
        </EditForm>
    </div>
</div>

@code {
    private Car Car { get; set; } = new();

    private async Task CreateCar()
    {
        Context.Car.Add(Car);
        await Context.SaveChangesAsync();
        Navigation.NavigateTo("cars");
    }

    private void GoBack()
    {
        Navigation.NavigateTo("cars");
    }
}