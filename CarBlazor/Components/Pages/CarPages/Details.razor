@page "/cars/details/{Id:int}"
@attribute [Authorize(Roles = "Admin,Manager,User")]
@using CarBlazor.Components.Constants
@using CarBlazor.DAL.Models
@using Microsoft.AspNetCore.Authorization
@using CarBlazor.Components.Datagrid
@inject HttpClient Http
@inject NavigationManager Navigation
@inject IJSRuntime JsRuntime
@rendermode InteractiveServer

<PageTitle>Car Details</PageTitle>

<h1>Details</h1>

<div>
    <hr/>
    @if (!string.IsNullOrEmpty(ErrorMessage))
    {
        <div class="alert alert-danger">@ErrorMessage</div>
    }

    @if (IsLoading)
    {
        <p>Loading...</p>
    }
    else if (Car != null)
    {
        <dl class="row">
            <dt class="col-sm-2">Make</dt>
            <dd class="col-sm-10">@Car.Make</dd>

            <dt class="col-sm-2">Model</dt>
            <dd class="col-sm-10">@Car.Model</dd>

            <dt class="col-sm-2">Year</dt>
            <dd class="col-sm-10">@Car.Year</dd>

            <dt class="col-sm-2">Color</dt>
            <dd class="col-sm-10">@Car.Color</dd>

            <dt class="col-sm-2">Production Date</dt>
            <dd class="col-sm-10">@Car.ProductionDate</dd>
        </dl>

        <div class="mt-3">
            <a class="btn btn-primary" href="@($"cars/edit/{Car.Id}")">Edit</a>
            <button class="btn btn-secondary" @onclick="GoBack">Back to List</button>
        </div>

        <hr/>

        <h4>
            Warranties
            @if (Warranties != null)
            {
                <span class="badge bg-primary">@Warranties.Count</span>
            }
        </h4>

        @if (Warranties != null && Warranties.Any())
        {
            <Datagrid TItem="Warranty" Items="Warranties" Columns="_warrantyColumns" OnRowClick="HandleRowClick">
                <RowActions Context="warranty">
                    <DeleteButton OnClick="@(() => DeleteConfirm(warranty.Id))"/>
                </RowActions>
            </Datagrid>
        }
        else
        {
            <tr>
                <td colspan="7">No warranties found for this car</td>
            </tr>
        }
    }
    else
    {
        <p>Car not found</p>
    }
</div>

@code {
    [Parameter] public int Id { get; set; }

    private Car? Car { get; set; }
    private List<Warranty>? Warranties { get; set; }
    private bool IsLoading { get; set; } = true;
    private string? ErrorMessage { get; set; }
    private readonly List<DataGridColumn<Warranty>> _warrantyColumns = DatagridColumnDefinitions.ReducedWarrantyColumns;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            Car = await Http.GetFromJsonAsync<Car>($"api/cars/{Id}");

            if (Car == null)
            {
                ErrorMessage = $"Car with ID {Id} not found.";
                return;
            }

            Warranties = await Http.GetFromJsonAsync<List<Warranty>>($"api/warranties/car/{Id}");
        }
        catch (Exception ex)
        {
            ErrorMessage = $"Error loading car details: {ex.Message}";
        }
        finally
        {
            IsLoading = false;
        }
    }

    private void GoBack()
    {
        Navigation.NavigateTo("cars");
    }

    private void HandleRowClick(Warranty warranty)
    {
        Navigation.NavigateTo($"warranties/details/{warranty.Id}");
    }

    private async Task DeleteConfirm(int id)
    {
        try
        {
            var confirmed = await JsRuntime.InvokeAsync<bool>("confirm", "Are you sure you want to delete this warranty?");
            if (confirmed)
            {
                var response = await Http.DeleteAsync($"api/warranties/{id}");
                if (response.IsSuccessStatusCode)
                {
                    Warranties = await Http.GetFromJsonAsync<List<Warranty>>($"api/warranties/car/{Id}");
                    ErrorMessage = null;
                }
                else
                {
                    ErrorMessage = "Failed to delete warranty. It may no longer exist.";
                }
            }
        }
        catch (Exception ex)
        {
            ErrorMessage = $"Error deleting warranty: {ex.Message}";
        }
    }

}