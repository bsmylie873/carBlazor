@page "/customers/delete/{Id:int}"
@attribute [Authorize]
@using CarBlazor.Data
@using CarBlazor.Models
@using Microsoft.AspNetCore.Authorization
@inject CarBlazorContext Context
@inject NavigationManager Navigation
@rendermode InteractiveServer

<PageTitle>Delete Customer</PageTitle>

<h1>Delete</h1>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>Customer</h4>
    <hr />
    @if (Customer != null)
    {
        <dl class="row">
            <dt class="col-sm-2">First Name</dt>
            <dd class="col-sm-10">@Customer.FirstName</dd>
            
            <dt class="col-sm-2">Last Name</dt>
            <dd class="col-sm-10">@Customer.LastName</dd>
            
            <dt class="col-sm-2">Email</dt>
            <dd class="col-sm-10">@Customer.Email</dd>
            
            <dt class="col-sm-2">Phone Number</dt>
            <dd class="col-sm-10">@Customer.PhoneNumber</dd>
            
            <dt class="col-sm-2">Address</dt>
            <dd class="col-sm-10">@Customer.Address</dd>
        </dl>

        <div>
            <button class="btn btn-danger" @onclick="DeleteCustomer">Delete</button> |
            <button class="btn btn-secondary" @onclick="GoBack">Back to List</button>
        </div>
    }
    else
    {
        <p>Loading...</p>
    }
</div>

@code {
    [Parameter]
    public int Id { get; set; }

    private Customer? Customer { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Customer = await Context.Customer.FindAsync(Id);
        
        if (Customer == null)
        {
            Navigation.NavigateTo("customers");
        }
    }

    private async Task DeleteCustomer()
    {
        if (Customer != null)
        {
            Context.Customer.Remove(Customer);
            await Context.SaveChangesAsync();
        }
        
        Navigation.NavigateTo("customers");
    }

    private void GoBack()
    {
        Navigation.NavigateTo("customers");
    }
}