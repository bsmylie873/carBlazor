@page "/warranties/delete/{Id:int}"
@attribute [Authorize(Roles = "Admin,Manager")]
@using CarBlazor.Data
@using CarBlazor.Models
@using Microsoft.AspNetCore.Authorization
@using Microsoft.EntityFrameworkCore
@inject CarBlazorContext Context
@inject NavigationManager Navigation
@rendermode InteractiveServer

<PageTitle>Delete Warranty</PageTitle>

<h1>Delete</h1>

<h3>Are you sure you want to delete this warranty?</h3>
<div>
    <h4>Warranty</h4>
    <hr/>
    @if (Warranty != null)
    {
        <dl class="row">
            <dt class="col-sm-2">Car</dt>
            <dd class="col-sm-10">@($"{Warranty.Car?.Make} {Warranty.Car?.Model} ({Warranty.Car?.Year})")</dd>

            <dt class="col-sm-2">Warranty Type</dt>
            <dd class="col-sm-10">@Warranty.WarrantyType?.Name</dd>

            <dt class="col-sm-2">Provider</dt>
            <dd class="col-sm-10">@Warranty.Provider</dd>

            <dt class="col-sm-2">Start Date</dt>
            <dd class="col-sm-10">@Warranty.StartDate.ToShortDateString()</dd>

            <dt class="col-sm-2">End Date</dt>
            <dd class="col-sm-10">@Warranty.EndDate.ToShortDateString()</dd>

            <dt class="col-sm-2">Coverage Details</dt>
            <dd class="col-sm-10">@Warranty.CoverageDetails</dd>

            <dt class="col-sm-2">Cost</dt>
            <dd class="col-sm-10">@Warranty.Cost.ToString("C")</dd>
        </dl>

        <form>
            <button type="button" class="btn btn-danger" @onclick="DeleteWarranty">Delete</button>
            |
            <button type="button" class="btn btn-secondary" @onclick="GoBack">Back to List</button>
        </form>
    }
    else
    {
        <p>Loading...</p>
    }
</div>

@code {
    [Parameter] public int Id { get; set; }

    private Warranty? Warranty { get; set; }
    private int? CarId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Warranty = await Context.Warranty
            .Include(w => w.Car)
            .Include(w => w.WarrantyType)
            .FirstOrDefaultAsync(w => w.Id == Id);

        if (Warranty == null)
        {
            Navigation.NavigateTo("warranties");
            return;
        }

        CarId = Warranty.CarId;
    }

    private async Task DeleteWarranty()
    {
        if (Warranty != null)
        {
            Context.Warranty.Remove(Warranty);
            await Context.SaveChangesAsync();

            if (CarId.HasValue)
            {
                Navigation.NavigateTo($"cars/details/{CarId.Value}");
            }
            else
            {
                Navigation.NavigateTo("warranties");
            }
        }
    }

    private void GoBack()
    {
        if (CarId.HasValue)
        {
            Navigation.NavigateTo($"cars/details/{CarId.Value}");
        }
        else
        {
            Navigation.NavigateTo("warranties");
        }
    }

}