@page "/warranties"
@attribute [Authorize]
@using CarBlazor.Data
@using CarBlazor.Models
@using Microsoft.AspNetCore.Authorization
@using Microsoft.EntityFrameworkCore
@inject CarBlazorContext Context
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime
@rendermode InteractiveServer

<PageTitle>Warranties</PageTitle>

<h1>Warranties</h1>

<p>
    <a href="warranties/create" class="btn btn-primary">Create New</a>
</p>

<table class="table">
    <thead>
        <tr>
            <th>Car</th>
            <th>Type</th>
            <th>Provider</th>
            <th>Start Date</th>
            <th>End Date</th>
            <th>Cost</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @if (Warranties != null)
        {
            @foreach (var warranty in Warranties)
            {
                <tr @onclick="() => ViewDetails(warranty.Id)" class="clickable-row">
                    <td>@($"{warranty.Car?.Make} {warranty.Car?.Model} ({warranty.Car?.Year})")</td>
                    <td>@warranty.WarrantyType?.Name</td>
                    <td>@warranty.Provider</td>
                    <td>@warranty.StartDate.ToShortDateString()</td>
                    <td>@warranty.EndDate.ToShortDateString()</td>
                    <td>@warranty.Cost.ToString("C")</td>
                    <td>
                        <button @onclick:stopPropagation="true" @onclick="() => DeleteConfirm(warranty.Id)"
                                class="btn btn-sm btn-link text-danger">
                            <i class="bi bi-trash fs-5"></i>
                        </button>
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="7">Loading...</td>
            </tr>
        }
    </tbody>
</table>

<style>
    .clickable-row {
        cursor: pointer;
    }

    .clickable-row:hover {
        background-color: #f5f5f5;
    }
</style>

@code {
    private List<Warranty>? Warranties { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Warranties = await Context.Warranty
            .Include(w => w.Car)
            .Include(w => w.WarrantyType)
            .ToListAsync();
    }

    private void ViewDetails(int id)
    {
        Navigation.NavigateTo($"warranties/details/{id}");
    }

    private async Task DeleteConfirm(int id)
    {
        var confirmed = await JSRuntime.InvokeAsync<bool>("confirm", "Are you sure you want to delete this warranty?");

        if (confirmed)
        {
            var warranty = await Context.Warranty.FindAsync(id);
            if (warranty != null)
            {
                Context.Warranty.Remove(warranty);
                await Context.SaveChangesAsync();
                Warranties = await Context.Warranty
                    .Include(w => w.Car)
                    .Include(w => w.WarrantyType)
                    .ToListAsync();
            }
        }
    }
}